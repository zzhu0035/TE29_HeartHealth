@model TE29_HeartHealth_GCardiac.Models.PreferenceViewModels

@{
    ViewBag.Title = "AIAdvice";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>AIAdvice</h2>
@*@section css{
    <style>
        body {
            background-image: url("../../img/advice_background.jpg");
            background-size: cover;
        }
    </style>
}*@
<p>Please input some detail about you and lets get your personal unique recommendations!</p>
<iframe width="100%" height="100%" frameborder="0" scrolling="yes" src="https://deepak-chandralal.shinyapps.io/recommendation/"></iframe>

@*@using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>PreferenceViewModels</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.MedicalConditions, htmlAttributes: new { @class = "control-label row" })
                <div class="checkbox">
                    <div class="row">
                        @Html.RadioButtonFor(model => model.MedicalConditions, 0, new { @id = "StatuesRadio0", @name = "Status", @class = "row", @Checked = "checked" })Yes, I do have previous medical conditions
                    </div>
                    <div class="row">
                        @Html.RadioButtonFor(model => model.MedicalConditions, 1, new { @id = "StatuesRadio1", @name = "Status", @class = "row" })No, I do not have any medical conditions as of now
                    </div>
                @Html.ValidationMessageFor(model => model.MedicalConditions, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Sports, htmlAttributes: new { @class = "control-label row" })
                <div class="row">
                    @Html.DropDownListFor(model => model.Sports, new[] { new SelectListItem() {Text="Water", Value="0" }, new SelectListItem() { Text = "Normal", Value = "1" } })
                    @Html.ValidationMessageFor(model => model.Sports, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MinCalory, htmlAttributes: new { @class = "control-label row" })
                <div class="row">
                    @Html.EditorFor(model => model.MinCalory, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MinCalory, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MaxCalory, htmlAttributes: new { @class = "control-label row" })
                <div class="row">
                    @Html.EditorFor(model => model.MaxCalory, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MaxCalory, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }*@

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@
